plugins {
    id("io.micronaut.application") version "3.7.4"
    id("com.google.cloud.tools.jib") version "3.3.1"
}

version = version()
group = "com.scarrionv"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor "io.micronaut:micronaut-inject-java:$micronautVersion"
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3:$micronautRxjava3Version")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("io.micronaut:micronaut-validation")
    compileOnly("org.projectlombok:lombok")
    testImplementation("org.mockito:mockito-core")
    implementation("io.micronaut:micronaut-aop:3.2.4")

}


application {
    mainClass.set("com.scarrionv.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

tasks {
    jib {
        from {
            image = 'azul/zulu-openjdk-alpine:17'
        }
        to {
            image = 'ghcr.io/scarrionv/micronaut-dummy'
            tags = ['latest', version()]
        }
    }
}
graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.scarrionv.*")
    }
}


configurations.configureEach {
    resolutionStrategy.dependencySubstitution {
        substitute(module("io.micronaut:micronaut-jackson-databind"))
                .using(module("io.micronaut.serde:micronaut-serde-jackson:1.5.2"))
    }
}

import groovy.json.JsonSlurper

def version() {
    def versionFile = file('package.json')
    def json = new JsonSlurper().parseText(versionFile.text)
    return json.version.toString()
}
