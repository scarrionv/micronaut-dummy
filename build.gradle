plugins {
    id("io.micronaut.application") version "3.7.2"
    id("com.google.cloud.tools.jib") version "3.3.1"
}

version = version()
group = "com.scarrionv"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation 'org.codehaus.groovy:groovy-json:3.0.9'
    compileOnly("org.projectlombok:lombok")
    runtimeOnly("org.slf4j:slf4j-simple")
    testImplementation("org.mockito:mockito-core")
    implementation("io.micronaut:micronaut-validation")

}


application {
    mainClass.set("com.scarrionv.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

tasks {
    jib {
        from {
            image = 'azul/zulu-openjdk:17-jre'
        }
        to {
            image = 'ghcr.io/scarrionv/micronaut-dummy:latest'
            tags = ['latest']
        }
        container {
            jvmFlags = ['-Djava.awt.headless=true', '-Xmx2048m']
            mainClass = 'com.scarrionv.Application'
        }
    }
}
graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.scarrionv.*")
    }
}



configurations.configureEach {
    resolutionStrategy.dependencySubstitution {
        substitute(module("io.micronaut:micronaut-jackson-databind"))
            .using(module("io.micronaut.serde:micronaut-serde-jackson:1.5.0"))
    }
}

import groovy.json.JsonSlurper
def version(){
    def versionFile = file('package.json')
    def json = new JsonSlurper().parseText(versionFile.text)
    return json.version
}
